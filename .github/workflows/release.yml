name: Release

on:
  release:
    types: [published]

jobs:
  release:
    runs-on:  ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.8"]

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Set up cache
      uses: actions/cache@v3
      id: cached-poetry-dependencies
      with:
        path: .venv
        key: venv-${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction

    - name: Check pip
      run: |
        pip check

    - name: Set build version from tag
      run: |
        poetry version $(git describe --tags --abbrev=0)

    - name: Build
      run: |
        poetry build

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-${{ github.sha }}
        path: dist/

    - name: Show
      run: ls -l dist/

    - name: Publish
      run: |
        poetry publish -u "__token__" -p ${{ secrets.PYPI_API_TOKEN }}

  upload-packages:
    runs-on: ubuntu-latest
    needs: release
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-${{ github.sha }}
        path: dist/

    - name: Upload to release
      uses: AButler/upload-release-assets@v2.0
      if: startsWith(github.event.ref, 'refs/tags') || github.event_name == 'release'
      with:
        files: 'dist/*'
        repo-token: ${{ secrets.GITHUB_TOKEN }}
